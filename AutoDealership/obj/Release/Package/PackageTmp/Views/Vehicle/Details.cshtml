@model AutoDealership.Models.VehicleDetailsViewModel
@using AutoDealership.Models

@{ ViewBag.Title = "Details"; }


@*<div>
        <h4>Vehicle</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.BrandId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BrandId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Model)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Model)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FuelType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FuelType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BodyStyle)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BodyStyle)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Transmission)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Transmission)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Year)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Year)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Mileage)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Mileage)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DrivetrainType)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DrivetrainType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Color)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Color)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.InteriorColor)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.InteriorColor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.FuelEfficiency)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.FuelEfficiency)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Horsepower)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Horsepower)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Torque)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Torque)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Engine)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Engine)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsForLease)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsForLease)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.IsForRent)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsForRent)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MonthlyPayment)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MonthlyPayment)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DailyPayment)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DailyPayment)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.VehicleStatus)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.VehicleStatus)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.InStock)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.InStock)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CoverImageURL)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CoverImageURL)
            </dd>

        </dl>
    </div>*@

<div class="container" style="padding-top: 5em">
    <div class="row">
        <div class="col-lg-8" style="padding-right: 10em">
            <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="true">
                <div class="carousel-inner">
                    @*<div class="carousel-item active">
                        <img src="@Html.DisplayFor(model => model.Vehicle.CoverImageURL)" class="d-block w-100 img-thumbnail" alt="...">
                    </div>*@
                    @{ var i = 0;
                        if (Model.Vehicle.ImagesURL != null)
                        {
                            var images = Model.Vehicle.ImagesURL.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                            foreach (var image in images)
                            {
                                if (i == 0)
                                {
            <div class="carousel-item active">
                <img src="@image" class="d-block w-100" alt="Vehicle Image">
            </div> }
        else
        {
    <div class="carousel-item">
        <img src="@image" class="d-block w-100" alt="Vehicle Image">
    </div> }
i++;
}
} }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
            <div class="carousel-indicators justify-content-between ms-0 me-0" style="bottom: auto; position: initial">
                @{ i = 0;
                    if (Model.Vehicle.ImagesURL != null)
                    {
                        var images = Model.Vehicle.ImagesURL.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                        foreach (var image in images)
                        {
                            if (i == 0)
                            { @*<img width="100" src="@image" />*@
                                                    <button style="background-image:url(@image); background-size:cover; width:100%;height:100px;" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" class="active" aria-current="true" aria-label="Slide @i"></button> }
                                                else
                                                {
                            <button style="background-image:url(@image); background-size:cover; width:100%;height:100px;" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i" aria-label="Slide @i"></button> }
                        i++;
                        if (i == 5) { break; }
                    }
                } }

                @*<button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>*@
            </div>
            <div class="container mt-5 mb-5">
                <h4 class="h4 fw-bold mt-4 mb-4">Vehicle Overview</h4>
                <p>@Html.DisplayFor(model => model.Vehicle.Description)</p>
            </div>
            <div class="container mt-5 mb-5">
                <h4 class="h4 fw-bold mt-4 mb-4">Highlighted Features</h4>
                <div class="row row-cols-2">
                    @{ if (Model.Vehicle.Features != null)
                        {
                            var features = Model.Vehicle.Features.Split(new string[] { "\r\n" }, StringSplitOptions.None);
                            int half = features.Length / 2;
            <div class="col">
                @for (int j = 0; j < half; j++)
                {
    <div>
        <i class="far fa-check my-blue-text-color p-2"></i> @features[j]
    </div>}
            </div>

                            <div class="col">
                                @for (int j = half; j < features.Length; j++)
                                {
                <div>
                    <i class="far fa-check my-blue-text-color p-2"></i> @features[j]
                </div>}
                            </div> @*foreach (var feature in features)
                            {
                                <li>@feature</li>
                            }*@ } }
                </div>


            </div>

            @*<img src="@Url.Content(Model.Vehicle.CoverImageURL)" />*@
        </div>
        <div class="col-lg-4">
            <div>
                <h1>@Html.DisplayFor(model => model.Vehicle.Year) @Html.DisplayFor(model => model.Vehicle.Model)</h1>
            </div>

            <div>
                <h6>
                    <img src="@Html.DisplayFor(model => model.Brand.LogoURL)" style="max-width: 50px;" />
                    @Html.DisplayFor(model => model.Brand.Name)
                </h6>
            </div>
            <hr />
            <div class="accordion" id="accordionExample">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingOne">
                        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            <h4>Specs</h4>
                        </button>
                    </h2>
                    <div id="collapseOne" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Engine):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Engine)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Horsepower):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Horsepower) HP (@String.Format("{0:0.00}", Model.Vehicle.Horsepower / 1.341) KW)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Torque):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Torque) nm
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.FuelType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.FuelType)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.FuelEfficiency):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.FuelEfficiency) l/100km | @String.Format("{0:0.00}", 235.214583 / Model.Vehicle.FuelEfficiency) MPG
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.BodyStyle):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.BodyStyle)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.DrivetrainType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.DrivetrainType)
                            </div>

                            <hr />

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Transmission.TransmissionType):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Transmission.TransmissionType)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Transmission.NumberSpeeds):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Transmission.NumberSpeeds)
                            </div>


                        </div>
                    </div>
                </div>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="headingTwo">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                            <h4>Vehicle Condition</h4>
                        </button>
                    </h2>
                    <div id="collapseTwo" class="accordion-collapse collapse" aria-labelledby="headingTwo" data-bs-parent="#accordionExample">
                        <div class="accordion-body">

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.VehicleStatus):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.VehicleStatus)
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Mileage):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                @Html.DisplayFor(model => model.Vehicle.Mileage) km | @String.Format("{0:0}", Model.Vehicle.Mileage / 1.609) mi
                            </div>

                            <br />

                            <hr />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.Color):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                <span class="rounded-circle border border-1 border-dark me-1" style="display: inline-block; height: 15px; width: 15px; background-color: @Html.DisplayFor(model => model.Vehicle.Color).ToString().ToLower()"></span>
                                <span>@Html.DisplayFor(model => model.Vehicle.Color)</span>
                            </div>

                            <br />

                            <div class="col" style="display: inline-block">
                                <strong>@Html.DisplayNameFor(model => model.Vehicle.InteriorColor):</strong>
                            </div>
                            <div class="col float-end" style="display: inline-block;">
                                <span class="rounded-circle border border-1 border-dark me-1" style="display: inline-block; height: 15px; width: 15px; background-color: @Html.DisplayFor(model => model.Vehicle.InteriorColor).ToString().ToLower()"></span>
                                <span>@Html.DisplayFor(model => model.Vehicle.InteriorColor)</span>
                            </div>



                        </div>
                    </div>
                </div>
                @*<div class="accordion-item">
                    <h2 class="accordion-header" id="headingThree">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Accordion Item #3
                        </button>
                    </h2>
                    <div id="collapseThree" class="accordion-collapse collapse" aria-labelledby="headingThree" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.
                        </div>
                    </div>
                </div>*@
            </div>

            @*HERE STARTS THE PRICE PART*@

            @if (Model.Vehicle.InStock)
            {
    <div class="text-center mt-5 rounded pb-1" style="background-color: #f1f4f9">
        <div class="text-start rounded my-blue-background-color fw-bold text-light text-uppercase mb-3">
            <div class="text-start">
                <i class="fas fa-caret-left fs-1 ps-3" style="rotate: 45deg;"></i>
            </div>
            <p class="ps-4 p-3 fs-5 text-center">PRICING</p>
        </div>
        @*<div class="alert alert-secondary" role="alert">*@


        <div class="row row-cols-2">
            <div class="col">
                <h4 class="h4 fw-lighter">Seller Price</h4>
            </div>
            <div class="col"><h4 class="h4 fw-bold">@Html.DisplayFor(model => model.Vehicle.Price)$</h4></div>
        </div>


        <div class="mt-5">
            <button data-bs-target="#reserve-vehicle-modal" data-bs-toggle="modal" class="w-75 ps-5 pe-5 btn btn-lg my-blue-background-color text-white" id="reserve-btn">Reserve now</button>
        </div>

        <div>
            <h5>or</h5>
        </div>

        <div class="mb-5">
            <button id="schedule-test-drive-btn" class="btn btn-warning text-primary fw-semibold w-75"><i class="fas fa-steering-wheel"></i> Schedule a test drive</button>
        </div>


        @*<hr />*@





        @*@if (Model.Vehicle.IsForLease)
        {
            <hr />
            <div>
                <h5>or</h5>
            </div>

            <div>
                <button class="btn btn-warning">Lease for @Html.DisplayFor(model => model.Vehicle.MonthlyPayment)$ monthly</button>
            </div>
        }*@


        @*</div>*@
    </div> }
else
{
    <div class="mt-5 rounded" style="background-color: #f1f4f9">
        <div class="rounded my-blue-background-color fw-bold text-light text-uppercase">
            <div class="text-start d-inline">
                <i class="fas fa-caret-left fs-1 ps-3" style="rotate: 45deg;"></i>
            </div>
            <p class="ps-4 p-3 fs-5 text-center">PRICING</p>
        </div>

        <div>
            <p class="fs-5 fw-semibold p-3">Sorry, this vehicle is currently unavailable</p>
        </div>
    </div>}


            <div class="text-center mt-5 rounded pb-1" style="background-color: #f1f4f9">
                <div class="text-start rounded my-blue-background-color fw-bold text-light text-uppercase mb-3">
                    <div class="text-start">
                        <i class="fas fa-caret-left fs-1 ps-3" style="rotate: 45deg;"></i>
                    </div>
                    <p class="ps-4 p-3 fs-5 text-center">MESSAGE SELLER</p>
                </div>
                @*<div class="alert alert-secondary" role="alert">*@

                <div class="mb-3">
                    <input type="text" class="form-control w-75 ms-auto me-auto" id="exampleFormControlInput1" placeholder="Your name (required)">
                </div>

                <div class="mb-3">
                    <input type="email" class="form-control w-75 ms-auto me-auto" id="exampleFormControlInput1" placeholder="Your email (required)">
                </div>

                <div class="mb-3">
                    <textarea rows="3" class="form-control w-75 ms-auto me-auto" placeholder="Your message"></textarea>
                </div>

                <div class="mb-3">
                    <button class="btn my-blue-background-color text-white w-75" value="Send Message">Send Message</button>
                </div>

            </div>




        </div>

        @if (ViewData["CurrentUser"] != null)
        {
            var user = ViewData["CurrentUser"] as ApplicationUser;
            var brands = ViewData["Brands"] as List<Brand>;
            
    <div class="row">
        <h4 class="h4 fw-semibold">Also viewed by you...</h4>

        <div class="row row-cols-5 gap-5">
            @foreach (var vehicle in user.ViewedVehicles)
            {
                var brand = brands.Find(b => b.Id == vehicle.BrandId);
        <div class="col" style="padding-bottom: 2em">
            <div class="vehicle-card" style="width:fit-content;" onclick="openVehicleDetails(@vehicle.Id)">
                <div class="card" style="width: 18rem;">
                    <div class="vehicle-card-image card-img-top">
                        <img style="mix-blend-mode: multiply" src="@Url.Content(vehicle.CoverImageURL)" class="card-img-top" alt="Image of @brand.Name @vehicle.Model">
                    </div>
                    <div class="card-body">
                        <h5 class="card-title text-center">@brand.Name @vehicle.Model</h5>

                        @*<div class="mt-5">
                        <div class="d-inline-block w-75">
                            <p class="card-text text-wrap d-inline-block">@vehicle.Description</p>
                        </div>
                        <a href="/Vehicle/Details/@vehicle.Id" class="btn btn-primary float-end">View</a>
                    </div>*@
                        <div class="d-flex justify-content-between pt-3 pb-3 my-blue-text-color">
                            @*<i class="far fa-calendar-alt my-blue-text-color"></i>*@
                            <span><i class="fal fa-calendar-alt my-blue-text-color"></i> @vehicle.Year</span>

                            @*<i class="fa fa-grip-lines-vertical opacity-50"></i>*@
                            <span class="my-blue-text-color">|</span>
                            @*<i class="fas fa-tachometer-alt my-blue-text-color opacity-75"></i>*@

                            <span><i class="fal fa-tachometer-alt-fast my-blue-text-color"></i> @vehicle.Mileage km</span>
                            <span class="my-blue-text-color">|</span>
                            @*<span><i class="fad fa-grip-lines-vertical" style="rotate: 180deg;"></i></span>*@

                            @*<i class="fas fa-gas-pump my-blue-text-color opacity-75"></i>*@
                            <span><i class="fal fa-gas-pump my-blue-text-color"></i> @vehicle.FuelType.ToString()</span>
                        </div>
                    </div>

                    <div class="card-footer text-center fw-semibold fs-5 my-blue-text-color">@vehicle.Price.ToString("c")</div>
                </div>
            </div>
        </div>}
        </div>


    </div>
        }



    </div>
</div>

@*<p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.Vehicle.Id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@

<!-- Reservation Modal -->
<div class="modal fade" id="reserve-vehicle-modal" tabindex="-1" aria-labelledby="reserve-vehicle-modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reserve-vehicle-modalLabel">Reserve this vehicle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{ var partial_view_model = new VehicleReservation();
                    partial_view_model.UserId = User.Identity.Name;
                    partial_view_model.VehicleId = Model.Vehicle.Id;
                    partial_view_model.IsTestDrive = false; }
                @Html.Partial("_ReserveVehicle", partial_view_model)
            </div>
            @*<div class="modal-footer justify-content-center">*@
            @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
            @*<button type="submit" class="btn btn-primary submit-role-btn">Save changes</button>*@
            <!--</div>-->
        </div>
    </div>
</div>
<!-- Reservation Modal End-->
<!-- Test Drive Modal -->
<div class="modal fade" id="test-drive-modal" tabindex="-1" aria-labelledby="test-drive-modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="test-drive-modalLabel">Schedule a test drive</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @{ partial_view_model = new VehicleReservation();
                    partial_view_model.UserId = User.Identity.Name;
                    partial_view_model.VehicleId = Model.Vehicle.Id;
                    partial_view_model.IsTestDrive = true; }
                @Html.Partial("_ReserveVehicle", partial_view_model)
            </div>
            @*<div class="modal-footer justify-content-center">*@
            @*<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>*@
            @*<button type="submit" class="btn btn-primary submit-role-btn">Save changes</button>*@
            <!--</div>-->
        </div>
    </div>
</div>
<!-- Test Drive Modal End-->

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#reserve-btn").click(function () {
                $("#reserve-vehicle-modal").modal('show');
            });

            $("#schedule-test-drive-btn").click(function () {
                $("#test-drive-modal").modal('show');
            });
            $("#confirm-reservation-btn, #confirm-test-drive-btn").click(function (e) {
                var isLoggedIn = @User.Identity.IsAuthenticated.ToString().ToLower();
                var returnUrl = window.location.pathname;
                if (!isLoggedIn) {
                    e.preventDefault();
                    //bootbox.alert("You must be logged in to make a reservation");
                    $("#reserve-vehicle-modal").modal('hide');
                    window.location.href = window.location.origin + "/Account/Login?ReturnUrl=" + returnUrl;
                    //$.ajax({
                    //    url: '/Account/Login',
                    //    type: 'GET',
                    //    data: { returnUrl: returnUrl },
                    //    async: false,
                    //    succcess: function (data) {
                    //        alert(data);
                    //    },
                    //    error: function (err) {
                    //        alert(err);
                    //    }
                    //});
                }
                @*else if (isLoggedIn) {
                    @{
                    var db = new ApplicationDbContext();
                    var user = db.Users.Where(u => u.UserName.Equals(User.Identity.Name)).FirstOrDefault();
                    }
                    if (@user != null && @user.ReservedVehicleId != null) {
                    bootbox.alert("You cannot reserve a vehicle since you already have one reserved!");
                    }
                }*@

            });


            var $carousel = $('#carouselExampleIndicators');
            $carousel.carousel();
            var handled = false;//global variable

            $carousel.bind('slide.bs.carousel', function (e) {
                var current = $(e.target).find('.item.active');
                var indx = $(current).index();
                if ((indx + 2) > $('.carousel-indicators button').length)
                    indx = -1
                if (!handled) {
                    $('.carousel-indicators button').removeClass('active')
                    $('.carousel-indicators button:nth-child(' + (indx + 2) + ')').addClass('active');
                }
                else {
                    handled = !handled;//if handled=true make it back to false to work normally.
                }
            });

            $(".carousel-indicators button, #carouselExampleIndicators > button").on('click', function () {
                //Click event for indicators
                $(this).addClass('active').siblings().removeClass('active');
                //remove siblings active class and add it to current clicked item
                handled = true; //set global variable to true to identify whether indicator changing was handled or not.
            });
        });
    </script>
}